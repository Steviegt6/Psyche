package fnf.psyche.api;

import interpret.DynamicModule;
import interpret.Env;

class EnvPopulator
{
	public static function populate(env:Env)
	{
		env.addModule("Constants", DynamicModule.fromStatic(Constants));
		env.addModule("animateatlas.AtlasFrameMaker", DynamicModule.fromStatic(animateatlas.AtlasFrameMaker));
		env.addModule("animateatlas.HelperEnums", DynamicModule.fromStatic(animateatlas.HelperEnums));
		env.addModule("animateatlas.JSONData", DynamicModule.fromStatic(animateatlas.JSONData));
		env.addModule("animateatlas.JSONData2020", DynamicModule.fromStatic(animateatlas.JSONData2020));
		env.addModule("fnf.Alphabet", DynamicModule.fromStatic(fnf.Alphabet));
		env.addModule("fnf.AlphaCharacter", DynamicModule.fromStatic(fnf.AlphaCharacter));
		env.addModule("fnf.AttachedSprite", DynamicModule.fromStatic(fnf.AttachedSprite));
		env.addModule("fnf.AttachedText", DynamicModule.fromStatic(fnf.AttachedText));
		env.addModule("fnf.BackgroundDancer", DynamicModule.fromStatic(fnf.BackgroundDancer));
		env.addModule("fnf.BackgroundGirls", DynamicModule.fromStatic(fnf.BackgroundGirls));
		env.addModule("fnf.BGSprite", DynamicModule.fromStatic(fnf.BGSprite));
		env.addModule("fnf.BlendModeEffect", DynamicModule.fromStatic(fnf.BlendModeEffect));
		env.addModule("fnf.Boyfriend", DynamicModule.fromStatic(fnf.Boyfriend));
		env.addModule("fnf.ButtonRemapSubstate", DynamicModule.fromStatic(fnf.ButtonRemapSubstate));
		env.addModule("fnf.Character", DynamicModule.fromStatic(fnf.Character));
		env.addModule("fnf.ChartParser", DynamicModule.fromStatic(fnf.ChartParser));
		env.addModule("fnf.CheckboxThingie", DynamicModule.fromStatic(fnf.CheckboxThingie));
		env.addModule("fnf.ClientPrefs", DynamicModule.fromStatic(fnf.ClientPrefs));
		env.addModule("fnf.ColorSwap", DynamicModule.fromStatic(fnf.ColorSwap));
		env.addModule("fnf.ColorSwapShader", DynamicModule.fromStatic(fnf.ColorSwapShader));
		env.addModule("fnf.Conductor", DynamicModule.fromStatic(fnf.Conductor));
		env.addModule("fnf.Controls", DynamicModule.fromStatic(fnf.Controls));
		env.addModule("fnf.CoolUtil", DynamicModule.fromStatic(fnf.CoolUtil));
		env.addModule("fnf.CreditsState", DynamicModule.fromStatic(fnf.CreditsState));
		env.addModule("fnf.CustomFadeTransition", DynamicModule.fromStatic(fnf.CustomFadeTransition));
		env.addModule("fnf.DialogueBox", DynamicModule.fromStatic(fnf.DialogueBox));
		env.addModule("fnf.DialogueBoxPsych", DynamicModule.fromStatic(fnf.DialogueBoxPsych));
		env.addModule("fnf.DialogueCharacter", DynamicModule.fromStatic(fnf.DialogueCharacter));
		env.addModule("fnf.DiscordClient", DynamicModule.fromStatic(fnf.DiscordClient));
		env.addModule("fnf.FlashingState", DynamicModule.fromStatic(fnf.FlashingState));
		env.addModule("fnf.FlxUIDropDownHeader", DynamicModule.fromStatic(fnf.FlxUIDropDownHeader));
		env.addModule("fnf.FlxUIDropDownMenuCustom", DynamicModule.fromStatic(fnf.FlxUIDropDownMenuCustom));
		env.addModule("fnf.FlxVideo", DynamicModule.fromStatic(fnf.FlxVideo));
		env.addModule("fnf.FreeplayState", DynamicModule.fromStatic(fnf.FreeplayState));
		env.addModule("fnf.GameOverSubstate", DynamicModule.fromStatic(fnf.GameOverSubstate));
		env.addModule("fnf.GameplayChangersSubstate", DynamicModule.fromStatic(fnf.GameplayChangersSubstate));
		env.addModule("fnf.GameplayOption", DynamicModule.fromStatic(fnf.GameplayOption));
		env.addModule("fnf.GitarooPause", DynamicModule.fromStatic(fnf.GitarooPause));
		env.addModule("fnf.HealthIcon", DynamicModule.fromStatic(fnf.HealthIcon));
		env.addModule("fnf.Highscore", DynamicModule.fromStatic(fnf.Highscore));
		env.addModule("fnf.InputFormatter", DynamicModule.fromStatic(fnf.InputFormatter));
		env.addModule("fnf.LatencyState", DynamicModule.fromStatic(fnf.LatencyState));
		env.addModule("fnf.LoadingState", DynamicModule.fromStatic(fnf.LoadingState));
		env.addModule("fnf.MainMenuState", DynamicModule.fromStatic(fnf.MainMenuState));
		env.addModule("fnf.MenuCharacter", DynamicModule.fromStatic(fnf.MenuCharacter));
		env.addModule("fnf.MenuItem", DynamicModule.fromStatic(fnf.MenuItem));
		env.addModule("fnf.ModchartSprite", DynamicModule.fromStatic(fnf.ModchartSprite));
		env.addModule("fnf.ModchartText", DynamicModule.fromStatic(fnf.ModchartText));
		env.addModule("fnf.ModMetadata", DynamicModule.fromStatic(fnf.ModMetadata));
		env.addModule("fnf.ModsMenuState", DynamicModule.fromStatic(fnf.ModsMenuState));
		env.addModule("fnf.MultiCallback", DynamicModule.fromStatic(fnf.MultiCallback));
		env.addModule("fnf.MusicBeatState", DynamicModule.fromStatic(fnf.MusicBeatState));
		env.addModule("fnf.MusicBeatSubstate", DynamicModule.fromStatic(fnf.MusicBeatSubstate));
		env.addModule("fnf.Note", DynamicModule.fromStatic(fnf.Note));
		env.addModule("fnf.NoteSplash", DynamicModule.fromStatic(fnf.NoteSplash));
		env.addModule("fnf.OutdatedState", DynamicModule.fromStatic(fnf.OutdatedState));
		env.addModule("fnf.OverlayShader", DynamicModule.fromStatic(fnf.OverlayShader));
		env.addModule("fnf.Paths", DynamicModule.fromStatic(fnf.Paths));
		env.addModule("fnf.PauseSubState", DynamicModule.fromStatic(fnf.PauseSubState));
		env.addModule("fnf.PlayerSettings", DynamicModule.fromStatic(fnf.PlayerSettings));
		env.addModule("fnf.PlayState", DynamicModule.fromStatic(fnf.PlayState));
		env.addModule("fnf.Prompt", DynamicModule.fromStatic(fnf.Prompt));
		env.addModule("fnf.ResetScoreSubState", DynamicModule.fromStatic(fnf.ResetScoreSubState));
		env.addModule("fnf.Section", DynamicModule.fromStatic(fnf.Section));
		env.addModule("fnf.Song", DynamicModule.fromStatic(fnf.Song));
		env.addModule("fnf.SongMetadata", DynamicModule.fromStatic(fnf.SongMetadata));
		env.addModule("fnf.StageData", DynamicModule.fromStatic(fnf.StageData));
		env.addModule("fnf.StoryMenuState", DynamicModule.fromStatic(fnf.StoryMenuState));
		env.addModule("fnf.StrumNote", DynamicModule.fromStatic(fnf.StrumNote));
		env.addModule("fnf.TitleState", DynamicModule.fromStatic(fnf.TitleState));
		env.addModule("fnf.WeekData", DynamicModule.fromStatic(fnf.WeekData));
		env.addModule("vlc.LibVLC", DynamicModule.fromStatic(vlc.LibVLC));
		env.addModule("vlc.VlcBitmap", DynamicModule.fromStatic(vlc.VlcBitmap));
		env.addModule("animateatlas.displayobject.SpriteAnimationLibrary", DynamicModule.fromStatic(animateatlas.displayobject.SpriteAnimationLibrary));
		env.addModule("animateatlas.displayobject.SpriteMovieClip", DynamicModule.fromStatic(animateatlas.displayobject.SpriteMovieClip));
		env.addModule("animateatlas.displayobject.SpriteSymbol", DynamicModule.fromStatic(animateatlas.displayobject.SpriteSymbol));
		env.addModule("animateatlas.tilecontainer.TileAnimationLibrary", DynamicModule.fromStatic(animateatlas.tilecontainer.TileAnimationLibrary));
		env.addModule("animateatlas.tilecontainer.TileContainerMovieClip", DynamicModule.fromStatic(animateatlas.tilecontainer.TileContainerMovieClip));
		env.addModule("animateatlas.tilecontainer.TileContainerSymbol", DynamicModule.fromStatic(animateatlas.tilecontainer.TileContainerSymbol));
		env.addModule("fnf.achievements.AchievementObject", DynamicModule.fromStatic(fnf.achievements.AchievementObject));
		env.addModule("fnf.achievements.Achievements", DynamicModule.fromStatic(fnf.achievements.Achievements));
		env.addModule("fnf.achievements.AchievementsMenuState", DynamicModule.fromStatic(fnf.achievements.AchievementsMenuState));
		env.addModule("fnf.achievements.AttachedAchievement", DynamicModule.fromStatic(fnf.achievements.AttachedAchievement));
		env.addModule("fnf.editors.AttachedFlxText", DynamicModule.fromStatic(fnf.editors.AttachedFlxText));
		env.addModule("fnf.editors.CharacterEditorState", DynamicModule.fromStatic(fnf.editors.CharacterEditorState));
		env.addModule("fnf.editors.ChartingState", DynamicModule.fromStatic(fnf.editors.ChartingState));
		env.addModule("fnf.editors.DialogueCharacterEditorState", DynamicModule.fromStatic(fnf.editors.DialogueCharacterEditorState));
		env.addModule("fnf.editors.DialogueEditorState", DynamicModule.fromStatic(fnf.editors.DialogueEditorState));
		env.addModule("fnf.editors.EditorPlayState", DynamicModule.fromStatic(fnf.editors.EditorPlayState));
		env.addModule("fnf.editors.MasterEditorMenu", DynamicModule.fromStatic(fnf.editors.MasterEditorMenu));
		env.addModule("fnf.editors.MenuCharacterEditorState", DynamicModule.fromStatic(fnf.editors.MenuCharacterEditorState));
		env.addModule("fnf.editors.WeekEditorFreeplayState", DynamicModule.fromStatic(fnf.editors.WeekEditorFreeplayState));
		env.addModule("fnf.editors.WeekEditorState", DynamicModule.fromStatic(fnf.editors.WeekEditorState));
		env.addModule("fnf.options.BaseOptionsMenu", DynamicModule.fromStatic(fnf.options.BaseOptionsMenu));
		env.addModule("fnf.options.ControlsSubState", DynamicModule.fromStatic(fnf.options.ControlsSubState));
		env.addModule("fnf.options.GameplaySettingsSubState", DynamicModule.fromStatic(fnf.options.GameplaySettingsSubState));
		env.addModule("fnf.options.GraphicsSettingsSubState", DynamicModule.fromStatic(fnf.options.GraphicsSettingsSubState));
		env.addModule("fnf.options.NoteOffsetState", DynamicModule.fromStatic(fnf.options.NoteOffsetState));
		env.addModule("fnf.options.NotesSubState", DynamicModule.fromStatic(fnf.options.NotesSubState));
		env.addModule("fnf.options.Option", DynamicModule.fromStatic(fnf.options.Option));
		env.addModule("fnf.options.OptionsState", DynamicModule.fromStatic(fnf.options.OptionsState));
		env.addModule("fnf.options.VisualsUISubState", DynamicModule.fromStatic(fnf.options.VisualsUISubState));
		env.addModule("fnf.psyche.FpsCache", DynamicModule.fromStatic(fnf.psyche.FpsCache));
		env.addModule("fnf.psyche.Psyche", DynamicModule.fromStatic(fnf.psyche.Psyche));
		env.addModule("fnf.psyche.PsycheFpsDisplay", DynamicModule.fromStatic(fnf.psyche.PsycheFpsDisplay));
		env.addModule("fnf.psyche.PsycheUtils", DynamicModule.fromStatic(fnf.psyche.PsycheUtils));
		env.addModule("fnf.psyche.api.Mod", DynamicModule.fromStatic(fnf.psyche.api.Mod));
		env.addModule("fnf.psyche.api.ModFile", DynamicModule.fromStatic(fnf.psyche.api.ModFile));
		env.addModule("fnf.psyche.api.ModLoader", DynamicModule.fromStatic(fnf.psyche.api.ModLoader));
		env.addModule("fnf.psyche.api.PsycheIdentifiers", DynamicModule.fromStatic(fnf.psyche.api.PsycheIdentifiers));
		env.addModule("fnf.psyche.content.Identifier", DynamicModule.fromStatic(fnf.psyche.content.Identifier));
		env.addModule("fnf.psyche.eventbus.DependencyContext", DynamicModule.fromStatic(fnf.psyche.eventbus.DependencyContext));
		env.addModule("fnf.psyche.eventbus.DependencyInjector", DynamicModule.fromStatic(fnf.psyche.eventbus.DependencyInjector));
		env.addModule("fnf.psyche.eventbus.Event", DynamicModule.fromStatic(fnf.psyche.eventbus.Event));
		env.addModule("fnf.psyche.eventbus.EventBus", DynamicModule.fromStatic(fnf.psyche.eventbus.EventBus));
		env.addModule("fnf.psyche.std.ParseResult", DynamicModule.fromStatic(fnf.psyche.std.ParseResult));
		env.addModule("fnf.states.abstracts.AbstractOptionsState", DynamicModule.fromStatic(fnf.states.abstracts.AbstractOptionsState));
		env.addModule("fnf.psyche.eventbus.events.tests.TitleScreenCreateTestEvent", DynamicModule.fromStatic(fnf.psyche.eventbus.events.tests.TitleScreenCreateTestEvent));
		env.addModule("flixel.FlxBasic", DynamicModule.fromStatic(flixel.FlxBasic));
		env.addModule("flixel.FlxCamera", DynamicModule.fromStatic(flixel.FlxCamera));
		env.addModule("flixel.FlxG", DynamicModule.fromStatic(flixel.FlxG));
		env.addModule("flixel.FlxGame", DynamicModule.fromStatic(flixel.FlxGame));
		env.addModule("flixel.FlxObject", DynamicModule.fromStatic(flixel.FlxObject));
		env.addModule("flixel.FlxSprite", DynamicModule.fromStatic(flixel.FlxSprite));
		env.addModule("flixel.FlxState", DynamicModule.fromStatic(flixel.FlxState));
		env.addModule("flixel.FlxStrip", DynamicModule.fromStatic(flixel.FlxStrip));
		env.addModule("flixel.FlxSubState", DynamicModule.fromStatic(flixel.FlxSubState));
		env.addModule("flixel.animation.FlxAnimation", DynamicModule.fromStatic(flixel.animation.FlxAnimation));
		env.addModule("flixel.animation.FlxAnimationController", DynamicModule.fromStatic(flixel.animation.FlxAnimationController));
		env.addModule("flixel.animation.FlxBaseAnimation", DynamicModule.fromStatic(flixel.animation.FlxBaseAnimation));
		env.addModule("flixel.animation.FlxPrerotatedAnimation", DynamicModule.fromStatic(flixel.animation.FlxPrerotatedAnimation));
		env.addModule("flixel.effects.FlxFlicker", DynamicModule.fromStatic(flixel.effects.FlxFlicker));
		env.addModule("flixel.graphics.FlxGraphic", DynamicModule.fromStatic(flixel.graphics.FlxGraphic));
		env.addModule("flixel.group.FlxGroup", DynamicModule.fromStatic(flixel.group.FlxGroup));
		env.addModule("flixel.group.FlxSpriteGroup", DynamicModule.fromStatic(flixel.group.FlxSpriteGroup));
		env.addModule("flixel.input.FlxAccelerometer", DynamicModule.fromStatic(flixel.input.FlxAccelerometer));
		env.addModule("flixel.input.FlxBaseKeyList", DynamicModule.fromStatic(flixel.input.FlxBaseKeyList));
		env.addModule("flixel.input.FlxInput", DynamicModule.fromStatic(flixel.input.FlxInput));
		env.addModule("flixel.input.FlxKeyManager", DynamicModule.fromStatic(flixel.input.FlxKeyManager));
		env.addModule("flixel.input.FlxPointer", DynamicModule.fromStatic(flixel.input.FlxPointer));
		env.addModule("flixel.input.FlxSwipe", DynamicModule.fromStatic(flixel.input.FlxSwipe));
		env.addModule("flixel.input.IFlxInput", DynamicModule.fromStatic(flixel.input.IFlxInput));
		env.addModule("flixel.input.IFlxInputManager", DynamicModule.fromStatic(flixel.input.IFlxInputManager));
		env.addModule("flixel.math.FlxAngle", DynamicModule.fromStatic(flixel.math.FlxAngle));
		env.addModule("flixel.math.FlxMath", DynamicModule.fromStatic(flixel.math.FlxMath));
		env.addModule("flixel.math.FlxMatrix", DynamicModule.fromStatic(flixel.math.FlxMatrix));
		env.addModule("flixel.math.FlxPoint", DynamicModule.fromStatic(flixel.math.FlxPoint));
		env.addModule("flixel.math.FlxRandom", DynamicModule.fromStatic(flixel.math.FlxRandom));
		env.addModule("flixel.math.FlxRect", DynamicModule.fromStatic(flixel.math.FlxRect));
		env.addModule("flixel.math.FlxVector", DynamicModule.fromStatic(flixel.math.FlxVector));
		env.addModule("flixel.math.FlxVelocity", DynamicModule.fromStatic(flixel.math.FlxVelocity));
		env.addModule("flixel.system.FlxAssets", DynamicModule.fromStatic(flixel.system.FlxAssets));
		env.addModule("flixel.system.FlxBasePreloader", DynamicModule.fromStatic(flixel.system.FlxBasePreloader));
		env.addModule("flixel.system.FlxBGSprite", DynamicModule.fromStatic(flixel.system.FlxBGSprite));
		env.addModule("flixel.system.FlxLinkedList", DynamicModule.fromStatic(flixel.system.FlxLinkedList));
		env.addModule("flixel.system.FlxPreloader", DynamicModule.fromStatic(flixel.system.FlxPreloader));
		env.addModule("flixel.system.FlxQuadTree", DynamicModule.fromStatic(flixel.system.FlxQuadTree));
		env.addModule("flixel.system.FlxSound", DynamicModule.fromStatic(flixel.system.FlxSound));
		env.addModule("flixel.system.FlxSoundGroup", DynamicModule.fromStatic(flixel.system.FlxSoundGroup));
		env.addModule("flixel.system.FlxSplash", DynamicModule.fromStatic(flixel.system.FlxSplash));
		env.addModule("flixel.system.FlxVersion", DynamicModule.fromStatic(flixel.system.FlxVersion));
		env.addModule("flixel.text.FlxBitmapText", DynamicModule.fromStatic(flixel.text.FlxBitmapText));
		env.addModule("flixel.text.FlxText", DynamicModule.fromStatic(flixel.text.FlxText));
		env.addModule("flixel.tile.FlxBaseTilemap", DynamicModule.fromStatic(flixel.tile.FlxBaseTilemap));
		env.addModule("flixel.tile.FlxTile", DynamicModule.fromStatic(flixel.tile.FlxTile));
		env.addModule("flixel.tile.FlxTileblock", DynamicModule.fromStatic(flixel.tile.FlxTileblock));
		env.addModule("flixel.tile.FlxTilemap", DynamicModule.fromStatic(flixel.tile.FlxTilemap));
		env.addModule("flixel.tile.FlxTilemapBuffer", DynamicModule.fromStatic(flixel.tile.FlxTilemapBuffer));
		env.addModule("flixel.tweens.FlxEase", DynamicModule.fromStatic(flixel.tweens.FlxEase));
		env.addModule("flixel.tweens.FlxTween", DynamicModule.fromStatic(flixel.tweens.FlxTween));
		env.addModule("flixel.ui.FlxAnalog", DynamicModule.fromStatic(flixel.ui.FlxAnalog));
		env.addModule("flixel.ui.FlxBar", DynamicModule.fromStatic(flixel.ui.FlxBar));
		env.addModule("flixel.ui.FlxBitmapTextButton", DynamicModule.fromStatic(flixel.ui.FlxBitmapTextButton));
		env.addModule("flixel.ui.FlxButton", DynamicModule.fromStatic(flixel.ui.FlxButton));
		env.addModule("flixel.ui.FlxSpriteButton", DynamicModule.fromStatic(flixel.ui.FlxSpriteButton));
		env.addModule("flixel.ui.FlxVirtualPad", DynamicModule.fromStatic(flixel.ui.FlxVirtualPad));
		env.addModule("flixel.util.FlxArrayUtil", DynamicModule.fromStatic(flixel.util.FlxArrayUtil));
		env.addModule("flixel.util.FlxAxes", DynamicModule.fromStatic(flixel.util.FlxAxes));
		env.addModule("flixel.util.FlxBitmapDataPool", DynamicModule.fromStatic(flixel.util.FlxBitmapDataPool));
		env.addModule("flixel.util.FlxBitmapDataUtil", DynamicModule.fromStatic(flixel.util.FlxBitmapDataUtil));
		env.addModule("flixel.util.FlxCollision", DynamicModule.fromStatic(flixel.util.FlxCollision));
		env.addModule("flixel.util.FlxColor", DynamicModule.fromStatic(flixel.util.FlxColor));
		env.addModule("flixel.util.FlxColorTransformUtil", DynamicModule.fromStatic(flixel.util.FlxColorTransformUtil));
		env.addModule("flixel.util.FlxDestroyUtil", DynamicModule.fromStatic(flixel.util.FlxDestroyUtil));
		env.addModule("flixel.util.FlxDirection", DynamicModule.fromStatic(flixel.util.FlxDirection));
		env.addModule("flixel.util.FlxDirectionFlags", DynamicModule.fromStatic(flixel.util.FlxDirectionFlags));
		env.addModule("flixel.util.FlxGradient", DynamicModule.fromStatic(flixel.util.FlxGradient));
		env.addModule("flixel.util.FlxHorizontalAlign", DynamicModule.fromStatic(flixel.util.FlxHorizontalAlign));
		env.addModule("flixel.util.FlxPath", DynamicModule.fromStatic(flixel.util.FlxPath));
		env.addModule("flixel.util.FlxPool", DynamicModule.fromStatic(flixel.util.FlxPool));
		env.addModule("flixel.util.FlxSave", DynamicModule.fromStatic(flixel.util.FlxSave));
		env.addModule("flixel.util.FlxSignal", DynamicModule.fromStatic(flixel.util.FlxSignal));
		env.addModule("flixel.util.FlxSort", DynamicModule.fromStatic(flixel.util.FlxSort));
		env.addModule("flixel.util.FlxSpriteUtil", DynamicModule.fromStatic(flixel.util.FlxSpriteUtil));
		env.addModule("flixel.util.FlxStringUtil", DynamicModule.fromStatic(flixel.util.FlxStringUtil));
		env.addModule("flixel.util.FlxTimer", DynamicModule.fromStatic(flixel.util.FlxTimer));
		env.addModule("flixel.util.FlxUnicodeUtil", DynamicModule.fromStatic(flixel.util.FlxUnicodeUtil));
		env.addModule("flixel.util.FlxVerticalAlign", DynamicModule.fromStatic(flixel.util.FlxVerticalAlign));
		env.addModule("flixel.effects.particles.FlxEmitter", DynamicModule.fromStatic(flixel.effects.particles.FlxEmitter));
		env.addModule("flixel.effects.particles.FlxParticle", DynamicModule.fromStatic(flixel.effects.particles.FlxParticle));
		env.addModule("flixel.effects.postprocess.PostProcess", DynamicModule.fromStatic(flixel.effects.postprocess.PostProcess));
		env.addModule("flixel.effects.postprocess.Shader", DynamicModule.fromStatic(flixel.effects.postprocess.Shader));
		env.addModule("flixel.graphics.atlas.FlxAtlas", DynamicModule.fromStatic(flixel.graphics.atlas.FlxAtlas));
		env.addModule("flixel.graphics.atlas.FlxNode", DynamicModule.fromStatic(flixel.graphics.atlas.FlxNode));
		env.addModule("flixel.graphics.frames.FlxAtlasFrames", DynamicModule.fromStatic(flixel.graphics.frames.FlxAtlasFrames));
		env.addModule("flixel.graphics.frames.FlxBitmapFont", DynamicModule.fromStatic(flixel.graphics.frames.FlxBitmapFont));
		env.addModule("flixel.graphics.frames.FlxFilterFrames", DynamicModule.fromStatic(flixel.graphics.frames.FlxFilterFrames));
		env.addModule("flixel.graphics.frames.FlxFrame", DynamicModule.fromStatic(flixel.graphics.frames.FlxFrame));
		env.addModule("flixel.graphics.frames.FlxFramesCollection", DynamicModule.fromStatic(flixel.graphics.frames.FlxFramesCollection));
		env.addModule("flixel.graphics.frames.FlxImageFrame", DynamicModule.fromStatic(flixel.graphics.frames.FlxImageFrame));
		env.addModule("flixel.graphics.frames.FlxTileFrames", DynamicModule.fromStatic(flixel.graphics.frames.FlxTileFrames));
		env.addModule("flixel.graphics.tile.FlxDrawBaseItem", DynamicModule.fromStatic(flixel.graphics.tile.FlxDrawBaseItem));
		env.addModule("flixel.graphics.tile.FlxDrawQuadsItem", DynamicModule.fromStatic(flixel.graphics.tile.FlxDrawQuadsItem));
		env.addModule("flixel.graphics.tile.FlxDrawTilesItem", DynamicModule.fromStatic(flixel.graphics.tile.FlxDrawTilesItem));
		env.addModule("flixel.graphics.tile.FlxDrawTrianglesItem", DynamicModule.fromStatic(flixel.graphics.tile.FlxDrawTrianglesItem));
		env.addModule("flixel.graphics.tile.FlxGraphicsShader", DynamicModule.fromStatic(flixel.graphics.tile.FlxGraphicsShader));
		env.addModule("flixel.input.actions.FlxAction", DynamicModule.fromStatic(flixel.input.actions.FlxAction));
		env.addModule("flixel.input.actions.FlxActionInput", DynamicModule.fromStatic(flixel.input.actions.FlxActionInput));
		env.addModule("flixel.input.actions.FlxActionInputAnalog", DynamicModule.fromStatic(flixel.input.actions.FlxActionInputAnalog));
		env.addModule("flixel.input.actions.FlxActionInputDigital", DynamicModule.fromStatic(flixel.input.actions.FlxActionInputDigital));
		env.addModule("flixel.input.actions.FlxActionManager", DynamicModule.fromStatic(flixel.input.actions.FlxActionManager));
		env.addModule("flixel.input.actions.FlxActionSet", DynamicModule.fromStatic(flixel.input.actions.FlxActionSet));
		env.addModule("flixel.input.actions.FlxSteamController", DynamicModule.fromStatic(flixel.input.actions.FlxSteamController));
		env.addModule("flixel.input.android.FlxAndroidKey", DynamicModule.fromStatic(flixel.input.android.FlxAndroidKey));
		env.addModule("flixel.input.android.FlxAndroidKeyList", DynamicModule.fromStatic(flixel.input.android.FlxAndroidKeyList));
		env.addModule("flixel.input.android.FlxAndroidKeys", DynamicModule.fromStatic(flixel.input.android.FlxAndroidKeys));
		env.addModule("flixel.input.gamepad.FlxGamepad", DynamicModule.fromStatic(flixel.input.gamepad.FlxGamepad));
		env.addModule("flixel.input.gamepad.FlxGamepadAnalogStick", DynamicModule.fromStatic(flixel.input.gamepad.FlxGamepadAnalogStick));
		env.addModule("flixel.input.gamepad.FlxGamepadButton", DynamicModule.fromStatic(flixel.input.gamepad.FlxGamepadButton));
		env.addModule("flixel.input.gamepad.FlxGamepadInputID", DynamicModule.fromStatic(flixel.input.gamepad.FlxGamepadInputID));
		env.addModule("flixel.input.gamepad.FlxGamepadManager", DynamicModule.fromStatic(flixel.input.gamepad.FlxGamepadManager));
		env.addModule("flixel.input.keyboard.FlxKey", DynamicModule.fromStatic(flixel.input.keyboard.FlxKey));
		env.addModule("flixel.input.keyboard.FlxKeyboard", DynamicModule.fromStatic(flixel.input.keyboard.FlxKeyboard));
		env.addModule("flixel.input.keyboard.FlxKeyList", DynamicModule.fromStatic(flixel.input.keyboard.FlxKeyList));
		env.addModule("flixel.input.mouse.FlxMouse", DynamicModule.fromStatic(flixel.input.mouse.FlxMouse));
		env.addModule("flixel.input.mouse.FlxMouseButton", DynamicModule.fromStatic(flixel.input.mouse.FlxMouseButton));
		env.addModule("flixel.input.mouse.FlxMouseEventManager", DynamicModule.fromStatic(flixel.input.mouse.FlxMouseEventManager));
		env.addModule("flixel.input.touch.FlxTouch", DynamicModule.fromStatic(flixel.input.touch.FlxTouch));
		env.addModule("flixel.input.touch.FlxTouchManager", DynamicModule.fromStatic(flixel.input.touch.FlxTouchManager));
		env.addModule("flixel.system.debug.DebuggerUtil", DynamicModule.fromStatic(flixel.system.debug.DebuggerUtil));
		env.addModule("flixel.system.debug.FlxDebugger", DynamicModule.fromStatic(flixel.system.debug.FlxDebugger));
		env.addModule("flixel.system.debug.Tooltip", DynamicModule.fromStatic(flixel.system.debug.Tooltip));
		env.addModule("flixel.system.debug.VCR", DynamicModule.fromStatic(flixel.system.debug.VCR));
		env.addModule("flixel.system.debug.Window", DynamicModule.fromStatic(flixel.system.debug.Window));
		env.addModule("flixel.system.frontEnds.BitmapFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.BitmapFrontEnd));
		env.addModule("flixel.system.frontEnds.BitmapLogFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.BitmapLogFrontEnd));
		env.addModule("flixel.system.frontEnds.CameraFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.CameraFrontEnd));
		env.addModule("flixel.system.frontEnds.ConsoleFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.ConsoleFrontEnd));
		env.addModule("flixel.system.frontEnds.DebuggerFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.DebuggerFrontEnd));
		env.addModule("flixel.system.frontEnds.HTML5FrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.HTML5FrontEnd));
		env.addModule("flixel.system.frontEnds.InputFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.InputFrontEnd));
		env.addModule("flixel.system.frontEnds.LogFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.LogFrontEnd));
		env.addModule("flixel.system.frontEnds.PluginFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.PluginFrontEnd));
		env.addModule("flixel.system.frontEnds.SignalFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.SignalFrontEnd));
		env.addModule("flixel.system.frontEnds.SoundFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.SoundFrontEnd));
		env.addModule("flixel.system.frontEnds.VCRFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.VCRFrontEnd));
		env.addModule("flixel.system.frontEnds.WatchFrontEnd", DynamicModule.fromStatic(flixel.system.frontEnds.WatchFrontEnd));
		env.addModule("flixel.system.macros.FlxAssetPaths", DynamicModule.fromStatic(flixel.system.macros.FlxAssetPaths));
		env.addModule("flixel.system.macros.FlxDefines", DynamicModule.fromStatic(flixel.system.macros.FlxDefines));
		env.addModule("flixel.system.macros.FlxGitSHA", DynamicModule.fromStatic(flixel.system.macros.FlxGitSHA));
		env.addModule("flixel.system.macros.FlxMacroUtil", DynamicModule.fromStatic(flixel.system.macros.FlxMacroUtil));
		env.addModule("flixel.system.replay.CodeValuePair", DynamicModule.fromStatic(flixel.system.replay.CodeValuePair));
		env.addModule("flixel.system.replay.FlxReplay", DynamicModule.fromStatic(flixel.system.replay.FlxReplay));
		env.addModule("flixel.system.replay.FrameRecord", DynamicModule.fromStatic(flixel.system.replay.FrameRecord));
		env.addModule("flixel.system.replay.MouseRecord", DynamicModule.fromStatic(flixel.system.replay.MouseRecord));
		env.addModule("flixel.system.scaleModes.BaseScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.BaseScaleMode));
		env.addModule("flixel.system.scaleModes.FillScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.FillScaleMode));
		env.addModule("flixel.system.scaleModes.FixedScaleAdjustSizeScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.FixedScaleAdjustSizeScaleMode));
		env.addModule("flixel.system.scaleModes.FixedScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.FixedScaleMode));
		env.addModule("flixel.system.scaleModes.PixelPerfectScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.PixelPerfectScaleMode));
		env.addModule("flixel.system.scaleModes.RatioScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.RatioScaleMode));
		env.addModule("flixel.system.scaleModes.RelativeScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.RelativeScaleMode));
		env.addModule("flixel.system.scaleModes.StageSizeScaleMode", DynamicModule.fromStatic(flixel.system.scaleModes.StageSizeScaleMode));
		env.addModule("flixel.system.ui.FlxFocusLostScreen", DynamicModule.fromStatic(flixel.system.ui.FlxFocusLostScreen));
		env.addModule("flixel.system.ui.FlxSoundTray", DynamicModule.fromStatic(flixel.system.ui.FlxSoundTray));
		env.addModule("flixel.system.ui.FlxSystemButton", DynamicModule.fromStatic(flixel.system.ui.FlxSystemButton));
		env.addModule("flixel.tweens.misc.AngleTween", DynamicModule.fromStatic(flixel.tweens.misc.AngleTween));
		env.addModule("flixel.tweens.misc.ColorTween", DynamicModule.fromStatic(flixel.tweens.misc.ColorTween));
		env.addModule("flixel.tweens.misc.NumTween", DynamicModule.fromStatic(flixel.tweens.misc.NumTween));
		env.addModule("flixel.tweens.misc.VarTween", DynamicModule.fromStatic(flixel.tweens.misc.VarTween));
		env.addModule("flixel.tweens.motion.CircularMotion", DynamicModule.fromStatic(flixel.tweens.motion.CircularMotion));
		env.addModule("flixel.tweens.motion.CubicMotion", DynamicModule.fromStatic(flixel.tweens.motion.CubicMotion));
		env.addModule("flixel.tweens.motion.LinearMotion", DynamicModule.fromStatic(flixel.tweens.motion.LinearMotion));
		env.addModule("flixel.tweens.motion.LinearPath", DynamicModule.fromStatic(flixel.tweens.motion.LinearPath));
		env.addModule("flixel.tweens.motion.Motion", DynamicModule.fromStatic(flixel.tweens.motion.Motion));
		env.addModule("flixel.tweens.motion.QuadMotion", DynamicModule.fromStatic(flixel.tweens.motion.QuadMotion));
		env.addModule("flixel.tweens.motion.QuadPath", DynamicModule.fromStatic(flixel.tweens.motion.QuadPath));
		env.addModule("flixel.util.helpers.FlxBounds", DynamicModule.fromStatic(flixel.util.helpers.FlxBounds));
		env.addModule("flixel.util.helpers.FlxPointRangeBounds", DynamicModule.fromStatic(flixel.util.helpers.FlxPointRangeBounds));
		env.addModule("flixel.util.helpers.FlxRange", DynamicModule.fromStatic(flixel.util.helpers.FlxRange));
		env.addModule("flixel.util.helpers.FlxRangeBounds", DynamicModule.fromStatic(flixel.util.helpers.FlxRangeBounds));
		env.addModule("flixel.util.typeLimit.OneOfFour", DynamicModule.fromStatic(flixel.util.typeLimit.OneOfFour));
		env.addModule("flixel.util.typeLimit.OneOfThree", DynamicModule.fromStatic(flixel.util.typeLimit.OneOfThree));
		env.addModule("flixel.util.typeLimit.OneOfTwo", DynamicModule.fromStatic(flixel.util.typeLimit.OneOfTwo));
		env.addModule("flixel.input.gamepad.id.LogitechID", DynamicModule.fromStatic(flixel.input.gamepad.id.LogitechID));
		env.addModule("flixel.input.gamepad.id.MayflashWiiRemoteID", DynamicModule.fromStatic(flixel.input.gamepad.id.MayflashWiiRemoteID));
		env.addModule("flixel.input.gamepad.id.MFiID", DynamicModule.fromStatic(flixel.input.gamepad.id.MFiID));
		env.addModule("flixel.input.gamepad.id.OUYAID", DynamicModule.fromStatic(flixel.input.gamepad.id.OUYAID));
		env.addModule("flixel.input.gamepad.id.PS4ID", DynamicModule.fromStatic(flixel.input.gamepad.id.PS4ID));
		env.addModule("flixel.input.gamepad.id.PSVitaID", DynamicModule.fromStatic(flixel.input.gamepad.id.PSVitaID));
		env.addModule("flixel.input.gamepad.id.SwitchJoyconLeftID", DynamicModule.fromStatic(flixel.input.gamepad.id.SwitchJoyconLeftID));
		env.addModule("flixel.input.gamepad.id.SwitchJoyconRightID", DynamicModule.fromStatic(flixel.input.gamepad.id.SwitchJoyconRightID));
		env.addModule("flixel.input.gamepad.id.SwitchProID", DynamicModule.fromStatic(flixel.input.gamepad.id.SwitchProID));
		env.addModule("flixel.input.gamepad.id.WiiRemoteID", DynamicModule.fromStatic(flixel.input.gamepad.id.WiiRemoteID));
		env.addModule("flixel.input.gamepad.id.XInputID", DynamicModule.fromStatic(flixel.input.gamepad.id.XInputID));
		env.addModule("flixel.input.gamepad.lists.FlxBaseGamepadList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxBaseGamepadList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadAnalogList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadAnalogList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadAnalogStateList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadAnalogStateList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadAnalogValueList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadAnalogValueList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadButtonList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadButtonList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadMotionValueList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadMotionValueList));
		env.addModule("flixel.input.gamepad.lists.FlxGamepadPointerValueList", DynamicModule.fromStatic(flixel.input.gamepad.lists.FlxGamepadPointerValueList));
		env.addModule("flixel.input.gamepad.mappings.FlxGamepadMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.FlxGamepadMapping));
		env.addModule("flixel.input.gamepad.mappings.LogitechMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.LogitechMapping));
		env.addModule("flixel.input.gamepad.mappings.MayflashWiiRemoteMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.MayflashWiiRemoteMapping));
		env.addModule("flixel.input.gamepad.mappings.MFiMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.MFiMapping));
		env.addModule("flixel.input.gamepad.mappings.OUYAMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.OUYAMapping));
		env.addModule("flixel.input.gamepad.mappings.PS4Mapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.PS4Mapping));
		env.addModule("flixel.input.gamepad.mappings.PSVitaMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.PSVitaMapping));
		env.addModule("flixel.input.gamepad.mappings.SwitchJoyconLeftMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.SwitchJoyconLeftMapping));
		env.addModule("flixel.input.gamepad.mappings.SwitchJoyconRightMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.SwitchJoyconRightMapping));
		env.addModule("flixel.input.gamepad.mappings.SwitchProMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.SwitchProMapping));
		env.addModule("flixel.input.gamepad.mappings.WiiRemoteMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.WiiRemoteMapping));
		env.addModule("flixel.input.gamepad.mappings.XInputMapping", DynamicModule.fromStatic(flixel.input.gamepad.mappings.XInputMapping));
		env.addModule("flixel.system.debug.completion.CompletionHandler", DynamicModule.fromStatic(flixel.system.debug.completion.CompletionHandler));
		env.addModule("flixel.system.debug.completion.CompletionList", DynamicModule.fromStatic(flixel.system.debug.completion.CompletionList));
		env.addModule("flixel.system.debug.completion.CompletionListEntry", DynamicModule.fromStatic(flixel.system.debug.completion.CompletionListEntry));
		env.addModule("flixel.system.debug.completion.CompletionListScrollBar", DynamicModule.fromStatic(flixel.system.debug.completion.CompletionListScrollBar));
		env.addModule("flixel.system.debug.console.Console", DynamicModule.fromStatic(flixel.system.debug.console.Console));
		env.addModule("flixel.system.debug.console.ConsoleCommands", DynamicModule.fromStatic(flixel.system.debug.console.ConsoleCommands));
		env.addModule("flixel.system.debug.console.ConsoleHistory", DynamicModule.fromStatic(flixel.system.debug.console.ConsoleHistory));
		env.addModule("flixel.system.debug.console.ConsoleUtil", DynamicModule.fromStatic(flixel.system.debug.console.ConsoleUtil));
		env.addModule("flixel.system.debug.interaction.Interaction", DynamicModule.fromStatic(flixel.system.debug.interaction.Interaction));
		env.addModule("flixel.system.debug.log.BitmapLog", DynamicModule.fromStatic(flixel.system.debug.log.BitmapLog));
		env.addModule("flixel.system.debug.log.Log", DynamicModule.fromStatic(flixel.system.debug.log.Log));
		env.addModule("flixel.system.debug.log.LogStyle", DynamicModule.fromStatic(flixel.system.debug.log.LogStyle));
		env.addModule("flixel.system.debug.stats.Stats", DynamicModule.fromStatic(flixel.system.debug.stats.Stats));
		env.addModule("flixel.system.debug.stats.StatsGraph", DynamicModule.fromStatic(flixel.system.debug.stats.StatsGraph));
		env.addModule("flixel.system.debug.watch.EditableTextField", DynamicModule.fromStatic(flixel.system.debug.watch.EditableTextField));
		env.addModule("flixel.system.debug.watch.Tracker", DynamicModule.fromStatic(flixel.system.debug.watch.Tracker));
		env.addModule("flixel.system.debug.watch.Watch", DynamicModule.fromStatic(flixel.system.debug.watch.Watch));
		env.addModule("flixel.system.debug.watch.WatchEntry", DynamicModule.fromStatic(flixel.system.debug.watch.WatchEntry));
		env.addModule("flixel.system.debug.watch.WatchEntryData", DynamicModule.fromStatic(flixel.system.debug.watch.WatchEntryData));
		env.addModule("flixel.system.debug.interaction.tools.Eraser", DynamicModule.fromStatic(flixel.system.debug.interaction.tools.Eraser));
		env.addModule("flixel.system.debug.interaction.tools.Mover", DynamicModule.fromStatic(flixel.system.debug.interaction.tools.Mover));
		env.addModule("flixel.system.debug.interaction.tools.Pointer", DynamicModule.fromStatic(flixel.system.debug.interaction.tools.Pointer));
		env.addModule("flixel.system.debug.interaction.tools.Tool", DynamicModule.fromStatic(flixel.system.debug.interaction.tools.Tool));
		env.addModule("flixel.system.debug.interaction.tools.Transform", DynamicModule.fromStatic(flixel.system.debug.interaction.tools.Transform));
		env.addModule("flixel.addons.api.FlxGameJolt", DynamicModule.fromStatic(flixel.addons.api.FlxGameJolt));
		env.addModule("flixel.addons.api.FlxKongregate", DynamicModule.fromStatic(flixel.addons.api.FlxKongregate));
		env.addModule("flixel.addons.display.FlxBackdrop", DynamicModule.fromStatic(flixel.addons.display.FlxBackdrop));
		env.addModule("flixel.addons.display.FlxExtendedSprite", DynamicModule.fromStatic(flixel.addons.display.FlxExtendedSprite));
		env.addModule("flixel.addons.display.FlxGridOverlay", DynamicModule.fromStatic(flixel.addons.display.FlxGridOverlay));
		env.addModule("flixel.addons.display.FlxMouseSpring", DynamicModule.fromStatic(flixel.addons.display.FlxMouseSpring));
		env.addModule("flixel.addons.display.FlxNestedSprite", DynamicModule.fromStatic(flixel.addons.display.FlxNestedSprite));
		env.addModule("flixel.addons.display.FlxPieDial", DynamicModule.fromStatic(flixel.addons.display.FlxPieDial));
		env.addModule("flixel.addons.display.FlxShaderMaskCamera", DynamicModule.fromStatic(flixel.addons.display.FlxShaderMaskCamera));
		env.addModule("flixel.addons.display.FlxSliceSprite", DynamicModule.fromStatic(flixel.addons.display.FlxSliceSprite));
		env.addModule("flixel.addons.display.FlxSpriteAniRot", DynamicModule.fromStatic(flixel.addons.display.FlxSpriteAniRot));
		env.addModule("flixel.addons.display.FlxStarField", DynamicModule.fromStatic(flixel.addons.display.FlxStarField));
		env.addModule("flixel.addons.display.FlxTiledSprite", DynamicModule.fromStatic(flixel.addons.display.FlxTiledSprite));
		env.addModule("flixel.addons.display.FlxZoomCamera", DynamicModule.fromStatic(flixel.addons.display.FlxZoomCamera));
		env.addModule("flixel.addons.effects.FlxClothSprite", DynamicModule.fromStatic(flixel.addons.effects.FlxClothSprite));
		env.addModule("flixel.addons.effects.FlxSkewedSprite", DynamicModule.fromStatic(flixel.addons.effects.FlxSkewedSprite));
		env.addModule("flixel.addons.effects.FlxTrail", DynamicModule.fromStatic(flixel.addons.effects.FlxTrail));
		env.addModule("flixel.addons.effects.FlxTrailArea", DynamicModule.fromStatic(flixel.addons.effects.FlxTrailArea));
		env.addModule("flixel.addons.nape.FlxNapeSpace", DynamicModule.fromStatic(flixel.addons.nape.FlxNapeSpace));
		env.addModule("flixel.addons.nape.FlxNapeSprite", DynamicModule.fromStatic(flixel.addons.nape.FlxNapeSprite));
		env.addModule("flixel.addons.nape.FlxNapeTilemap", DynamicModule.fromStatic(flixel.addons.nape.FlxNapeTilemap));
		env.addModule("flixel.addons.nape.FlxNapeVelocity", DynamicModule.fromStatic(flixel.addons.nape.FlxNapeVelocity));
		env.addModule("flixel.addons.plugin.FlxMouseControl", DynamicModule.fromStatic(flixel.addons.plugin.FlxMouseControl));
		env.addModule("flixel.addons.plugin.FlxScrollingText", DynamicModule.fromStatic(flixel.addons.plugin.FlxScrollingText));
		env.addModule("flixel.addons.text.FlxTextField", DynamicModule.fromStatic(flixel.addons.text.FlxTextField));
		env.addModule("flixel.addons.text.FlxTypeText", DynamicModule.fromStatic(flixel.addons.text.FlxTypeText));
		env.addModule("flixel.addons.tile.FlxCaveGenerator", DynamicModule.fromStatic(flixel.addons.tile.FlxCaveGenerator));
		env.addModule("flixel.addons.tile.FlxRayCastTilemap", DynamicModule.fromStatic(flixel.addons.tile.FlxRayCastTilemap));
		env.addModule("flixel.addons.tile.FlxTileAnimation", DynamicModule.fromStatic(flixel.addons.tile.FlxTileAnimation));
		env.addModule("flixel.addons.tile.FlxTilemapExt", DynamicModule.fromStatic(flixel.addons.tile.FlxTilemapExt));
		env.addModule("flixel.addons.tile.FlxTileSpecial", DynamicModule.fromStatic(flixel.addons.tile.FlxTileSpecial));
		env.addModule("flixel.addons.transition.FlxTransitionableState", DynamicModule.fromStatic(flixel.addons.transition.FlxTransitionableState));
		env.addModule("flixel.addons.transition.FlxTransitionSprite", DynamicModule.fromStatic(flixel.addons.transition.FlxTransitionSprite));
		env.addModule("flixel.addons.transition.Transition", DynamicModule.fromStatic(flixel.addons.transition.Transition));
		env.addModule("flixel.addons.transition.TransitionData", DynamicModule.fromStatic(flixel.addons.transition.TransitionData));
		env.addModule("flixel.addons.transition.TransitionEffect", DynamicModule.fromStatic(flixel.addons.transition.TransitionEffect));
		env.addModule("flixel.addons.transition.TransitionFade", DynamicModule.fromStatic(flixel.addons.transition.TransitionFade));
		env.addModule("flixel.addons.transition.TransitionTiles", DynamicModule.fromStatic(flixel.addons.transition.TransitionTiles));
		env.addModule("flixel.addons.ui.FlxButtonPlus", DynamicModule.fromStatic(flixel.addons.ui.FlxButtonPlus));
		env.addModule("flixel.addons.ui.FlxClickArea", DynamicModule.fromStatic(flixel.addons.ui.FlxClickArea));
		env.addModule("flixel.addons.ui.FlxSlider", DynamicModule.fromStatic(flixel.addons.ui.FlxSlider));
		env.addModule("flixel.addons.util.FlxAsyncLoop", DynamicModule.fromStatic(flixel.addons.util.FlxAsyncLoop));
		env.addModule("flixel.addons.util.FlxFSM", DynamicModule.fromStatic(flixel.addons.util.FlxFSM));
		env.addModule("flixel.addons.util.FlxScene", DynamicModule.fromStatic(flixel.addons.util.FlxScene));
		env.addModule("flixel.addons.util.FlxSimplex", DynamicModule.fromStatic(flixel.addons.util.FlxSimplex));
		env.addModule("flixel.addons.util.PNGEncoder", DynamicModule.fromStatic(flixel.addons.util.PNGEncoder));
		env.addModule("flixel.addons.weapon.FlxBullet", DynamicModule.fromStatic(flixel.addons.weapon.FlxBullet));
		env.addModule("flixel.addons.weapon.FlxWeapon", DynamicModule.fromStatic(flixel.addons.weapon.FlxWeapon));
		env.addModule("flixel.addons.display.shapes.FlxShape", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShape));
		env.addModule("flixel.addons.display.shapes.FlxShapeArrow", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeArrow));
		env.addModule("flixel.addons.display.shapes.FlxShapeBox", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeBox));
		env.addModule("flixel.addons.display.shapes.FlxShapeCircle", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeCircle));
		env.addModule("flixel.addons.display.shapes.FlxShapeCross", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeCross));
		env.addModule("flixel.addons.display.shapes.FlxShapeDonut", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeDonut));
		env.addModule("flixel.addons.display.shapes.FlxShapeDoubleCircle", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeDoubleCircle));
		env.addModule("flixel.addons.display.shapes.FlxShapeGrid", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeGrid));
		env.addModule("flixel.addons.display.shapes.FlxShapeLightning", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeLightning));
		env.addModule("flixel.addons.display.shapes.FlxShapeLine", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeLine));
		env.addModule("flixel.addons.display.shapes.FlxShapeSquareDonut", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeSquareDonut));
		env.addModule("flixel.addons.display.shapes.FlxShapeType", DynamicModule.fromStatic(flixel.addons.display.shapes.FlxShapeType));
		env.addModule("flixel.addons.editors.ogmo.FlxOgmo3Loader", DynamicModule.fromStatic(flixel.addons.editors.ogmo.FlxOgmo3Loader));
		env.addModule("flixel.addons.editors.ogmo.FlxOgmoLoader", DynamicModule.fromStatic(flixel.addons.editors.ogmo.FlxOgmoLoader));
		env.addModule("flixel.addons.editors.pex.FlxPexParser", DynamicModule.fromStatic(flixel.addons.editors.pex.FlxPexParser));
		env.addModule("flixel.addons.editors.spine.FlxSpine", DynamicModule.fromStatic(flixel.addons.editors.spine.FlxSpine));
		env.addModule("flixel.addons.editors.tiled.TiledGroupLayer", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledGroupLayer));
		env.addModule("flixel.addons.editors.tiled.TiledImageLayer", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledImageLayer));
		env.addModule("flixel.addons.editors.tiled.TiledImageTile", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledImageTile));
		env.addModule("flixel.addons.editors.tiled.TiledLayer", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledLayer));
		env.addModule("flixel.addons.editors.tiled.TiledMap", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledMap));
		env.addModule("flixel.addons.editors.tiled.TiledObject", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledObject));
		env.addModule("flixel.addons.editors.tiled.TiledObjectLayer", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledObjectLayer));
		env.addModule("flixel.addons.editors.tiled.TiledPropertySet", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledPropertySet));
		env.addModule("flixel.addons.editors.tiled.TiledTile", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledTile));
		env.addModule("flixel.addons.editors.tiled.TiledTileLayer", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledTileLayer));
		env.addModule("flixel.addons.editors.tiled.TiledTilePropertySet", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledTilePropertySet));
		env.addModule("flixel.addons.editors.tiled.TiledTileSet", DynamicModule.fromStatic(flixel.addons.editors.tiled.TiledTileSet));
		env.addModule("flixel.addons.effects.chainable.FlxEffectSprite", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxEffectSprite));
		env.addModule("flixel.addons.effects.chainable.FlxGlitchEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxGlitchEffect));
		env.addModule("flixel.addons.effects.chainable.FlxOutlineEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxOutlineEffect));
		env.addModule("flixel.addons.effects.chainable.FlxRainbowEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxRainbowEffect));
		env.addModule("flixel.addons.effects.chainable.FlxShakeEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxShakeEffect));
		env.addModule("flixel.addons.effects.chainable.FlxTrailEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxTrailEffect));
		env.addModule("flixel.addons.effects.chainable.FlxWaveEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.FlxWaveEffect));
		env.addModule("flixel.addons.effects.chainable.IFlxEffect", DynamicModule.fromStatic(flixel.addons.effects.chainable.IFlxEffect));
		env.addModule("flixel.addons.plugin.control.FlxControl", DynamicModule.fromStatic(flixel.addons.plugin.control.FlxControl));
		env.addModule("flixel.addons.plugin.control.FlxControlHandler", DynamicModule.fromStatic(flixel.addons.plugin.control.FlxControlHandler));
		env.addModule("flixel.addons.plugin.screengrab.FlxScreenGrab", DynamicModule.fromStatic(flixel.addons.plugin.screengrab.FlxScreenGrab));
		env.addModule("flixel.addons.plugin.taskManager.FlxTask", DynamicModule.fromStatic(flixel.addons.plugin.taskManager.FlxTask));
		env.addModule("flixel.addons.plugin.taskManager.FlxTaskManager", DynamicModule.fromStatic(flixel.addons.plugin.taskManager.FlxTaskManager));
		env.addModule("flixel.addons.editors.spine.texture.FlixelTextureLoader", DynamicModule.fromStatic(flixel.addons.editors.spine.texture.FlixelTextureLoader));
		env.addModule("interpret.ConvertHaxe", DynamicModule.fromStatic(interpret.ConvertHaxe));
		env.addModule("interpret.DynamicAbstract", DynamicModule.fromStatic(interpret.DynamicAbstract));
		env.addModule("interpret.DynamicClass", DynamicModule.fromStatic(interpret.DynamicClass));
		env.addModule("interpret.DynamicEnum", DynamicModule.fromStatic(interpret.DynamicEnum));
		env.addModule("interpret.DynamicInstance", DynamicModule.fromStatic(interpret.DynamicInstance));
		env.addModule("interpret.DynamicModule", DynamicModule.fromStatic(interpret.DynamicModule));
		env.addModule("interpret.DynamicPackage", DynamicModule.fromStatic(interpret.DynamicPackage));
		env.addModule("interpret.Env", DynamicModule.fromStatic(interpret.Env));
		env.addModule("interpret.Errors", DynamicModule.fromStatic(interpret.Errors));
		env.addModule("interpret.Interpretable", DynamicModule.fromStatic(interpret.Interpretable));
		env.addModule("interpret.InterpretableTools", DynamicModule.fromStatic(interpret.InterpretableTools));
		env.addModule("interpret.Interpreter", DynamicModule.fromStatic(interpret.Interpreter));
		env.addModule("interpret.LiveReload", DynamicModule.fromStatic(interpret.LiveReload));
		env.addModule("interpret.ModuleOptions", DynamicModule.fromStatic(interpret.ModuleOptions));
		env.addModule("interpret.ResolveImports", DynamicModule.fromStatic(interpret.ResolveImports));
		env.addModule("interpret.ResolveUsings", DynamicModule.fromStatic(interpret.ResolveUsings));
		env.addModule("interpret.StandardWatcher", DynamicModule.fromStatic(interpret.StandardWatcher));
		env.addModule("interpret.Types", DynamicModule.fromStatic(interpret.Types));
		env.addModule("interpret.TypeUtils", DynamicModule.fromStatic(interpret.TypeUtils));
		env.addModule("interpret.Unresolved", DynamicModule.fromStatic(interpret.Unresolved));
		env.addModule("interpret.Watcher", DynamicModule.fromStatic(interpret.Watcher));
		env.addModule("interpret.macros.InterpretableMacro", DynamicModule.fromStatic(interpret.macros.InterpretableMacro));
		env.addModule("flixel.addons.ui.Anchor", DynamicModule.fromStatic(flixel.addons.ui.Anchor));
		env.addModule("flixel.addons.ui.AnchorPoint", DynamicModule.fromStatic(flixel.addons.ui.AnchorPoint));
		env.addModule("flixel.addons.ui.BorderDef", DynamicModule.fromStatic(flixel.addons.ui.BorderDef));
		env.addModule("flixel.addons.ui.ButtonLabelStyle", DynamicModule.fromStatic(flixel.addons.ui.ButtonLabelStyle));
		env.addModule("flixel.addons.ui.FlxBaseMultiInput", DynamicModule.fromStatic(flixel.addons.ui.FlxBaseMultiInput));
		env.addModule("flixel.addons.ui.FlxInputText", DynamicModule.fromStatic(flixel.addons.ui.FlxInputText));
		env.addModule("flixel.addons.ui.FlxMultiGamepad", DynamicModule.fromStatic(flixel.addons.ui.FlxMultiGamepad));
		env.addModule("flixel.addons.ui.FlxMultiGamepadAnalogStick", DynamicModule.fromStatic(flixel.addons.ui.FlxMultiGamepadAnalogStick));
		env.addModule("flixel.addons.ui.FlxMultiKey", DynamicModule.fromStatic(flixel.addons.ui.FlxMultiKey));
		env.addModule("flixel.addons.ui.FlxUI", DynamicModule.fromStatic(flixel.addons.ui.FlxUI));
		env.addModule("flixel.addons.ui.FlxUI9SliceSprite", DynamicModule.fromStatic(flixel.addons.ui.FlxUI9SliceSprite));
		env.addModule("flixel.addons.ui.FlxUIAssets", DynamicModule.fromStatic(flixel.addons.ui.FlxUIAssets));
		env.addModule("flixel.addons.ui.FlxUIBar", DynamicModule.fromStatic(flixel.addons.ui.FlxUIBar));
		env.addModule("flixel.addons.ui.FlxUIButton", DynamicModule.fromStatic(flixel.addons.ui.FlxUIButton));
		env.addModule("flixel.addons.ui.FlxUICheckBox", DynamicModule.fromStatic(flixel.addons.ui.FlxUICheckBox));
		env.addModule("flixel.addons.ui.FlxUIColorSwatch", DynamicModule.fromStatic(flixel.addons.ui.FlxUIColorSwatch));
		env.addModule("flixel.addons.ui.FlxUIColorSwatchSelecter", DynamicModule.fromStatic(flixel.addons.ui.FlxUIColorSwatchSelecter));
		env.addModule("flixel.addons.ui.FlxUICursor", DynamicModule.fromStatic(flixel.addons.ui.FlxUICursor));
		env.addModule("flixel.addons.ui.FlxUIDropDownMenu", DynamicModule.fromStatic(flixel.addons.ui.FlxUIDropDownMenu));
		env.addModule("flixel.addons.ui.FlxUIGroup", DynamicModule.fromStatic(flixel.addons.ui.FlxUIGroup));
		env.addModule("flixel.addons.ui.FlxUIInputText", DynamicModule.fromStatic(flixel.addons.ui.FlxUIInputText));
		env.addModule("flixel.addons.ui.FlxUILine", DynamicModule.fromStatic(flixel.addons.ui.FlxUILine));
		env.addModule("flixel.addons.ui.FlxUIList", DynamicModule.fromStatic(flixel.addons.ui.FlxUIList));
		env.addModule("flixel.addons.ui.FlxUILoadingScreen", DynamicModule.fromStatic(flixel.addons.ui.FlxUILoadingScreen));
		env.addModule("flixel.addons.ui.FlxUIMouse", DynamicModule.fromStatic(flixel.addons.ui.FlxUIMouse));
		env.addModule("flixel.addons.ui.FlxUINumericStepper", DynamicModule.fromStatic(flixel.addons.ui.FlxUINumericStepper));
		env.addModule("flixel.addons.ui.FlxUIPopup", DynamicModule.fromStatic(flixel.addons.ui.FlxUIPopup));
		env.addModule("flixel.addons.ui.FlxUIRadioGroup", DynamicModule.fromStatic(flixel.addons.ui.FlxUIRadioGroup));
		env.addModule("flixel.addons.ui.FlxUIRegion", DynamicModule.fromStatic(flixel.addons.ui.FlxUIRegion));
		env.addModule("flixel.addons.ui.FlxUISlider", DynamicModule.fromStatic(flixel.addons.ui.FlxUISlider));
		env.addModule("flixel.addons.ui.FlxUISprite", DynamicModule.fromStatic(flixel.addons.ui.FlxUISprite));
		env.addModule("flixel.addons.ui.FlxUISpriteButton", DynamicModule.fromStatic(flixel.addons.ui.FlxUISpriteButton));
		env.addModule("flixel.addons.ui.FlxUIState", DynamicModule.fromStatic(flixel.addons.ui.FlxUIState));
		env.addModule("flixel.addons.ui.FlxUISubState", DynamicModule.fromStatic(flixel.addons.ui.FlxUISubState));
		env.addModule("flixel.addons.ui.FlxUITabMenu", DynamicModule.fromStatic(flixel.addons.ui.FlxUITabMenu));
		env.addModule("flixel.addons.ui.FlxUIText", DynamicModule.fromStatic(flixel.addons.ui.FlxUIText));
		env.addModule("flixel.addons.ui.FlxUITileTest", DynamicModule.fromStatic(flixel.addons.ui.FlxUITileTest));
		env.addModule("flixel.addons.ui.FlxUITooltip", DynamicModule.fromStatic(flixel.addons.ui.FlxUITooltip));
		env.addModule("flixel.addons.ui.FlxUITooltipManager", DynamicModule.fromStatic(flixel.addons.ui.FlxUITooltipManager));
		env.addModule("flixel.addons.ui.FlxUITypedButton", DynamicModule.fromStatic(flixel.addons.ui.FlxUITypedButton));
		env.addModule("flixel.addons.ui.FontDef", DynamicModule.fromStatic(flixel.addons.ui.FontDef));
		env.addModule("flixel.addons.ui.FontFixer", DynamicModule.fromStatic(flixel.addons.ui.FontFixer));
		env.addModule("flixel.addons.ui.StrNameLabel", DynamicModule.fromStatic(flixel.addons.ui.StrNameLabel));
		env.addModule("flixel.addons.ui.SwatchData", DynamicModule.fromStatic(flixel.addons.ui.SwatchData));
		env.addModule("flixel.addons.ui.U", DynamicModule.fromStatic(flixel.addons.ui.U));
		env.addModule("flixel.addons.ui.interfaces.ICursorPointable", DynamicModule.fromStatic(flixel.addons.ui.interfaces.ICursorPointable));
		env.addModule("flixel.addons.ui.interfaces.IEventGetter", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IEventGetter));
		env.addModule("flixel.addons.ui.interfaces.IFireTongue", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IFireTongue));
		env.addModule("flixel.addons.ui.interfaces.IFlxUIButton", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IFlxUIButton));
		env.addModule("flixel.addons.ui.interfaces.IFlxUIClickable", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IFlxUIClickable));
		env.addModule("flixel.addons.ui.interfaces.IFlxUIState", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IFlxUIState));
		env.addModule("flixel.addons.ui.interfaces.IFlxUIWidget", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IFlxUIWidget));
		env.addModule("flixel.addons.ui.interfaces.IHasParams", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IHasParams));
		env.addModule("flixel.addons.ui.interfaces.ILabeled", DynamicModule.fromStatic(flixel.addons.ui.interfaces.ILabeled));
		env.addModule("flixel.addons.ui.interfaces.IResizable", DynamicModule.fromStatic(flixel.addons.ui.interfaces.IResizable));
		env.addModule("discord_rpc.DiscordRpc", DynamicModule.fromStatic(discord_rpc.DiscordRpc));
		// Auto-generated interpret (https://github.com/jeremyfa/interpret) module bindings.
	}
	// Auto-generated function "populate(env:Env)" for Psyche (https://github.com/Steviegt6/Psyche/).
}
// Auto-generated class "EnvPopulator" for Psyche (https://github.com/Steviegt6/Psyche/).
